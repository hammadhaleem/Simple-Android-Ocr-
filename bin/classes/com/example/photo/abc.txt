package com.example.photo;

import java.io.File;

import android.media.ExifInterface;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Matrix;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import com.googlecode.tesseract.android.TessBaseAPI;

public class MainActivity extends Activity {

	protected Button _button;
	protected ImageView _image;
	protected TextView _field;
	protected String _path;
	protected boolean _taken;
		
	protected static final String PHOTO_TAKEN = "photo_taken";
	
	
	@Override
	public void onCreate(Bundle savedInstanceState) 
	{
	    super.onCreate(savedInstanceState);
	        
	    setContentView(R.layout.activity_main);
	       
	    _image = ( ImageView ) findViewById( R.id.imageView1);
	    _field = ( TextView ) findViewById( R.id.textView1 );
	    _button = ( Button ) findViewById( R.id.button1 );
	    _button.setOnClickListener( new ButtonClickHandler() );
	    _path = Environment.getExternalStorageDirectory() + "/images/";
	}
	
	public class ButtonClickHandler implements View.OnClickListener 
	{
	    public void onClick( View view ){
	    	startCameraActivity();
	    }
	}
	protected void startCameraActivity()
	{
	    File file = new File( _path );
	    Uri outputFileUri = Uri.fromFile( file );
	    	
	    Intent intent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE );
	    intent.putExtra( MediaStore.EXTRA_OUTPUT, outputFileUri );
	    	
	    startActivityForResult( intent, 0 );
	}
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) 
	{	
	    Log.i( "MakeMachine", "resultCode: " + resultCode );
	    switch( resultCode )
	    {
	    	case 0:
	    		Log.i( "MakeMachine", "User cancelled" );
	    		break;
	    			
	    	case -1:
	    		onPhotoTaken();
	    		break;
	    }
	}
	protected void onPhotoTaken()
	{
	    _taken = true;
	    	
	    BitmapFactory.Options options = new BitmapFactory.Options();
	    options.inSampleSize = 4;
	    
	    Bitmap bitmap = BitmapFactory.decodeFile( _path, options );
	    _image.setImageBitmap(bitmap);
	    
	    System.out.println("Picture taken "+_path);
	    _field.setVisibility( View.GONE );
	    
	    ExifInterface exif = new ExifInterface(_path);
	    int exifOrientation = exif.getAttributeInt(
	            ExifInterface.TAG_ORIENTATION,
	            ExifInterface.ORIENTATION_NORMAL);

	    int rotate = 0;

	    switch (exifOrientation) {
	    case ExifInterface.ORIENTATION_ROTATE_90:
	        rotate = 90;
	        break;
	    case ExifInterface.ORIENTATION_ROTATE_180:
	        rotate = 180;
	        break;
	    case ExifInterface.ORIENTATION_ROTATE_270:
	        rotate = 270;
	        break;
	    }

	    if (rotate != 0) {
	        int w = bitmap.getWidth();
	        int h = bitmap.getHeight();

	        // Setting pre rotate
	        Matrix mtx = new Matrix();
	        mtx.preRotate(rotate);

	        // Rotating Bitmap & convert to ARGB_8888, required by tess
	        bitmap = Bitmap.createBitmap(bitmap, 0, 0, w, h, mtx, false);
	        bitmap = bitmap.copy(Bitmap.Config.ARGB_8888, true);
	    }
	   
	    TessBaseAPI baseApi = new TessBaseAPI();
	    // DATA_PATH = Path to the storage
	    // lang for which the language data exists, usually "eng"
	    baseApi.init(_path,"eng"); baseApi.setImage(bitmap);
	    String recognizedText = baseApi.getUTF8Text();
	    baseApi.end();
	    
	}
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	
}